/*
 * Created on 3 avr. 2014 ( Time 19:39:37 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
// This Bean has a basic Primary Key (not composite) 

package cn.ilongfei.jpa.modeltest.model.test.bookstore;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.List;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "CUSTOMER"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="CUSTOMER", schema="ROOT" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="CustomerEntity.countAll", query="SELECT COUNT(x) FROM CustomerEntity x" )
} )
public class CustomerEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @Column(name="CODE", nullable=false, length=5)
    private String     code         ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="FIRST_NAME", length=40)
    private String     firstName    ;

    @Column(name="LAST_NAME", length=40)
    private String     lastName     ;

    @Column(name="LOGIN", nullable=false, length=20)
    private String     login        ;

    @Column(name="PASSWORD", length=20)
    private String     password     ;

    @Column(name="AGE")
    private Integer    age          ;

    @Column(name="CITY", length=45)
    private String     city         ;

    @Column(name="ZIP_CODE")
    private Integer    zipCode      ;

    @Column(name="PHONE", length=20)
    private String     phone        ;

    @Column(name="REVIEWER")
    private Short      reviewer     ;

	// "countryCode" (column "COUNTRY_CODE") is not defined by itself because used as FK in a link 


    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @OneToMany(mappedBy="customer", targetEntity=ReviewEntity.class)
    private List<ReviewEntity> listOfReview;

    @OneToMany(mappedBy="customer", targetEntity=BookOrderEntity.class)
    private List<BookOrderEntity> listOfBookOrder;

    @ManyToOne
    @JoinColumn(name="COUNTRY_CODE", referencedColumnName="CODE")
    private CountryEntity country     ;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public CustomerEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setCode( String code ) {
        this.code = code ;
    }
    public String getCode() {
        return this.code;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : FIRST_NAME ( VARCHAR ) 
    public void setFirstName( String firstName ) {
        this.firstName = firstName;
    }
    public String getFirstName() {
        return this.firstName;
    }

    //--- DATABASE MAPPING : LAST_NAME ( VARCHAR ) 
    public void setLastName( String lastName ) {
        this.lastName = lastName;
    }
    public String getLastName() {
        return this.lastName;
    }

    //--- DATABASE MAPPING : LOGIN ( VARCHAR ) 
    public void setLogin( String login ) {
        this.login = login;
    }
    public String getLogin() {
        return this.login;
    }

    //--- DATABASE MAPPING : PASSWORD ( VARCHAR ) 
    public void setPassword( String password ) {
        this.password = password;
    }
    public String getPassword() {
        return this.password;
    }

    //--- DATABASE MAPPING : AGE ( INTEGER ) 
    public void setAge( Integer age ) {
        this.age = age;
    }
    public Integer getAge() {
        return this.age;
    }

    //--- DATABASE MAPPING : CITY ( VARCHAR ) 
    public void setCity( String city ) {
        this.city = city;
    }
    public String getCity() {
        return this.city;
    }

    //--- DATABASE MAPPING : ZIP_CODE ( INTEGER ) 
    public void setZipCode( Integer zipCode ) {
        this.zipCode = zipCode;
    }
    public Integer getZipCode() {
        return this.zipCode;
    }

    //--- DATABASE MAPPING : PHONE ( VARCHAR ) 
    public void setPhone( String phone ) {
        this.phone = phone;
    }
    public String getPhone() {
        return this.phone;
    }

    //--- DATABASE MAPPING : REVIEWER ( SMALLINT ) 
    public void setReviewer( Short reviewer ) {
        this.reviewer = reviewer;
    }
    public Short getReviewer() {
        return this.reviewer;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setListOfReview( List<ReviewEntity> listOfReview ) {
        this.listOfReview = listOfReview;
    }
    public List<ReviewEntity> getListOfReview() {
        return this.listOfReview;
    }

    public void setListOfBookOrder( List<BookOrderEntity> listOfBookOrder ) {
        this.listOfBookOrder = listOfBookOrder;
    }
    public List<BookOrderEntity> getListOfBookOrder() {
        return this.listOfBookOrder;
    }

    public void setCountry( CountryEntity country ) {
        this.country = country;
    }
    public CountryEntity getCountry() {
        return this.country;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(code);
        sb.append("]:"); 
        sb.append(firstName);
        sb.append("|");
        sb.append(lastName);
        sb.append("|");
        sb.append(login);
        sb.append("|");
        sb.append(password);
        sb.append("|");
        sb.append(age);
        sb.append("|");
        sb.append(city);
        sb.append("|");
        sb.append(zipCode);
        sb.append("|");
        sb.append(phone);
        sb.append("|");
        sb.append(reviewer);
        return sb.toString(); 
    } 

}
